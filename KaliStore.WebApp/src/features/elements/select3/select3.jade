template
  require(from="./select3.css")
  div.select3
    div.input-group
      input.form-control.select3-value-box(type="text",
        value.bind="selectedItemName",
        readonly,
        disabled.bind="disabled",
        placeholder="${opts.caption | t}",
        focus.trigger="onValueInputFocus()",
        mousedown.trigger="toggleDropdown()",
        keydown.trigger="onValueInputKeyPressed($event)")
      div.input-group-btn
        button.btn.btn-secondary.btn-default(tabindex="-1",
          type="button",
          disabled.bind="disabled",
          show.bind="!opts.disableClear && value !== opts.emptyValue",
          mousedown.trigger="clearValue()")
          i.fa.fa-times
        button.btn.btn-secondary.btn-default(tabindex="-1",
          type="button",
          disabled.bind="disabled",
          mousedown.trigger="toggleDropdown()")
          i.fa(class.bind="isDropdownOpen? 'fa-caret-up' : 'fa-caret-down'")
    div.select3-dropdown(show.bind="isDropdownOpen")
      input.select3-search-box.form-control(type="text", value.bind="searchedItem",
        keydown.trigger="onSearchInputKeyPressed($event)",
        blur.trigger="closeDropdown(false)")
      div.select3-dropdown-results-container
        div.select3-dropdown-results(mousewheel.trigger="scrollDropdown($event)")
          div.select3-result.select3-no-results-message(if.bind="filteredData.length === 0") ${opts.noResultsMessage}
          div.select3-result(repeat.for="datum of filteredDataShort",
            mousedown.trigger="selectItem(datum)",
            innerhtml.bind="datum.highlightedName",
            mouseenter.trigger="setHover(datum)",
            class="${datum.item[opts.id] === hoveredDatum.item[opts.id] ? 'hovered' : ''} " +
                  "${(opts.modelValueBind ? value[opts.id] : value) === datum.item[opts.id] || " +
            "parseInt(opts.modelValueBind ? value[opts.id] : value) === datum.item[opts.id] ? 'selected' : ''}")
        div.select3-scrollbar(mousewheel.trigger="scrollDropdown($event)")
          button.select3-scrollbar-up-btn(tabindex="-1",
          type="button",
          class="${filteredDataShortStartIndex === 0 ? 'disabled': 'enabled'}",
          mousedown.trigger="startScrollUp()",
          mouseup.trigger="stopScrollUp()",
          mouseleave.trigger="stopScrollUp()")
            span.fa.fa-caret-up
          div.select3-scrollbar-dragger-container(mousedown.trigger="onDraggerContainerClick($event)")
            div.select3-scrollbar-dragger(style.bind="{height: draggerHeight + 'px', top: draggerTop + 'px'}",
            mousedown.trigger="startScrollbarDragging()")
          button.select3-scrollbar-down-btn(tabindex="-1",
          type="button",
          class="${filteredDataShortEndIndex === filteredData.length - 1 ? 'disabled': 'enabled'}",
          mousedown.trigger="startScrollDown()",
          mouseup.trigger="stopScrollDown()",
          mouseleave.trigger="stopScrollDown()")
            span.fa.fa-caret-down
